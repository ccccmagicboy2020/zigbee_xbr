C51 COMPILER V9.60.0.0   FLASH                                                             11/09/2020 10:26:38 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE FLASH
OBJECT MODULE PLACED IN .\Objects\Flash.obj
COMPILER INVOKED BY: C:\SoftWare\Keil\C51\BIN\C51.EXE ..\user\Flash.c OPTIMIZE(9,SIZE) REGFILE(.\Objects\003_ISP_NEW.ORC
                    -) BROWSE INTVECTOR(0X3800) INCDIR(..\user;..\include) DEBUG OBJECTEXTEND PRINT(.\Listings\Flash.lst) TABS(2) OBJECT(.\Ob
                    -jects\Flash.obj)

line level    source

   1          #include "include.h"
   2          
   3          unsigned char  Read_F_dat  =   0;
   4          unsigned char  xdata  ID_DAT[2]={0};
   5          /*************************************************************
   6            Function   : CRC_FLASH_BLANK 
   7            Description: add 地址  Size_Flash 长度
   8            Input      : guc_Uartbuf-发送的字节      
   9            return     : 0  !0    
  10          *************************************************************/
  11          unsigned char  XOR_FLASH_BLANK(unsigned int Add,unsigned int Size_Flash)
  12          {
  13   1        unsigned int  i=0;
  14   1        WDTC |= 0x10;                   //清狗
  15   1        while(Size_Flash--)
  16   1        if(*(unsigned char code *)(Add++)) return 1;
  17   1        return 0;
  18   1      }
  19          /*********************************
  20            函数名称：IAP清除扇区函数
  21            函数功能：清除一个扇区的数据
  22                  输入扇区地址为当前扇区内任意地址                       
  23          *********************************/
  24          void IAR_Clear(unsigned int clradd)
  25          {
  26   1        if(clradd>=0x3800) 
  27   1        return; 
  28   1        IAP_CMDH = 0xF0;
  29   1        IAP_CMDL = 0x0F;
  30   1        IAP_ADDR = clradd;
  31   1        IAP_CMDH = 0xD2; //选择操作方式， 扇区擦除
  32   1        IAP_CMDL = 0x2D;
  33   1        IAP_CMDH = 0xE1; //触发
  34   1        IAP_CMDL = 0x1E; //触发后 IAP_ADDRL&IAP_ADDRH 指向 0xFF，同时自动锁定
  35   1      }
  36          /*********************************
  37            函数名称：IAP清除扇区函数
  38            函数功能：全扇区擦除                       
  39          *********************************/
  40          void IAR_Clear_arrang(unsigned int clradd,unsigned int len)
  41          {
  42   1        unsigned int i;
  43   1        WDTC |= 0x10;                   //清狗  
  44   1        for(i=0;i<=len;i++)
  45   1        {
  46   2          if(clradd>=0x3800)      return; 
  47   2          if(XOR_FLASH_BLANK(clradd,128))   IAR_Clear(clradd);
  48   2          clradd=clradd+0x80;
  49   2        }
  50   1      }
  51          /*********************************
  52            函数名称： Earse_Flash(void)函数  
  53            函数功能： 擦除Flash 前12K               
C51 COMPILER V9.60.0.0   FLASH                                                             11/09/2020 10:26:38 PAGE 2   

  54          *********************************/
  55          unsigned char Earse_Flash(void)
  56          {//003 16K 0000~3fff (擦除前12K)
  57   1        IAR_Clear_arrang(0x0000,32);  
  58   1        IAR_Clear_arrang(0x1000,32);
  59   1        IAR_Clear_arrang(0x2000,32);
  60   1        IAR_Clear_arrang(0x3000,16);  
  61   1        if(XOR_FLASH_BLANK(0x0000,0x2FFF)!=0x00)  return 0;
  62   1        else  return 1;                 
  63   1      } 
  64          /*********************************
  65            函数名称：FLASH写一个字节
  66            函数功能：在FLASH任意位置写入一个字节的数据                      
  67          *********************************/
  68          void IAR_Write_Byte(unsigned int add,unsigned char datt)
  69          {
  70   1        IAP_DATA = datt; //待编程数据，写入数据寄存器必须放在解锁之前
  71   1        /*命令寄存器---解锁*/
  72   1        IAP_CMD=0xF00F;
  73   1        /*地址寄存器---写地址*/
  74   1        IAP_ADDR=add;
  75   1        /*命令寄存器---字节编程*/
  76   1        IAP_CMD=0xB44B;
  77   1        /*命令寄存器---触发一次*/
  78   1        IAP_CMD=0xE11E;
  79   1      }
  80          
  81          /*********************************
  82            函数名称：FLASH写多个字节
  83            函数功能：FLASH任意位置开始，写任意长度的数据                      
  84          *********************************/
  85          void IAR_Write_arrang(unsigned int add,unsigned char *datt,unsigned int len)
  86          {
  87   1        unsigned int i;
  88   1        for(i=0;i<len;i++)
  89   1        { 
  90   2          if(add>=0x3800) return;   
  91   2          IAR_Write_Byte(add,datt[i]);
  92   2          add++;
  93   2        }
  94   1      }
  95          
  96          /*******************************************************
  97            函数名称：FLASH读任意个字节
  98            函数功能：FLASH任意位置开始，读任意长度的数据                      
  99          *******************************************************/
 100          void IAR_Read(unsigned int add,unsigned char *buf,unsigned int len)
 101          {
 102   1        while(len--)
 103   1        *(buf++)=*((unsigned char code *)(add++));//读取数据
 104   1      }
 105          
 106          /*******************************************************
 107            函数名称：FLASH软件复位
 108            函数功能：不重读Option                     
 109          *******************************************************/
 110          void IAR_Soft_Rst_No_Option(void)
 111          {
 112   1        IAP_CMD = 0xF00F;
 113   1        IAP_CMD = 0x8778;
 114   1      }
 115          /*******************************************************
C51 COMPILER V9.60.0.0   FLASH                                                             11/09/2020 10:26:38 PAGE 3   

 116            函数名称：FLASH软件复位
 117            函数功能：重读Option                     
 118          *******************************************************/
 119          void IAR_Soft_Rst_Option(void)
 120          {
 121   1        IAP_CMD = 0xF00F;
 122   1        IAP_CMD = 0x7887;
 123   1      }
 124          
 125          /*********************************
 126            函数名称： Read_ID(void)函数  
 127            函数功能： 读取芯片型号                  
 128          *********************************/
 129          bit Read_ID(void)
 130          {
 131   1        INSCON=0x10;
 132   1        IAR_Read(0x0120,ID_DAT,1);
 133   1        INSCON=0x00;
 134   1      
 135   1        if((ID_DAT[0])==Chip_ID)
 136   1        {   
 137   2              return SUCCESS;
 138   2        }
 139   1        else
 140   1        {   
 141   2              return ERROR;
 142   2        }
 143   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    417    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
